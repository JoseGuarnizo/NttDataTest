name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build the Project
    runs-on: windows-latest
    steps:
      # Configura el JDK necesario
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternativa de distribución

      # Clona el repositorio
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Evita clones superficiales para análisis completos

      # Cache de paquetes de SonarQube
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache de SonarQube Scanner
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      # Instala el SonarScanner solo si no está en cache
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # Construye el proyecto
      - name: Build the project
        run: |
          dotnet build TestApiNttData/TestApiNttData.sln

  test:
    name: Run Tests and Analyze with Sonar
    runs-on: windows-latest
    needs: build  # Asegura que los tests solo se ejecuten después de la etapa de Build
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v4

      # Paso 1: Ejecutar pruebas
      - name: Run unit tests
        run: |
          dotnet test TestApiNttData/TestApiNttData.sln --logger "trx;LogFileName=test-results.trx"

      # Paso 2: Ejecutar análisis con SonarQube
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Especifica la ruta al archivo .sln correctamente
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"JoseGuarnizo_NttDataTest" /o:"joseguarnizo" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build TestApiNttData/TestApiNttData.sln  # Especifica la ruta al archivo .sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
